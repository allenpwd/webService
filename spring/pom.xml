<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>webService</artifactId>
        <groupId>pwd.allen</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>spring</artifactId>
    <!--这里一定要设置war，否则默认jar，jetty插件启动后会直接停止-->
    <packaging>war</packaging>

    <properties>
        <spring.version>4.3.11.RELEASE</spring.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>pwd.allen</groupId>
            <artifactId>common</artifactId>
            <version>${version}</version>
        </dependency>
        <dependency>
            <groupId>pwd.allen</groupId>
            <artifactId>base-rs</artifactId>
            <version>${version}</version>
        </dependency>

        <!--CXF-->
        <!--CxfServlet在里面-->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <!--ws-->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <!--<editor-fold desc="JAW-RS">-->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <!--restful风格客户端-->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <!--json支持-->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-extension-providers</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <!--转换json工具包，不引入的话没法支持json格式-->
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.3.7</version>
        </dependency>
        <!--</editor-fold>-->

        <!--spring-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>8.0.1</version>
            <scope>provided</scope>
        </dependency>

        <!--spring测试，junit要求4.12以上-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>webservice-spring</finalName>
        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.4.24.v20191120</version>
                <configuration>
                    <stopPort>8888</stopPort>
                    <stopKey>stop</stopKey>
                    <!-- 扫描项目变更的时间间隔，默认为0不扫描 -->
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <reload>automatic</reload>
                    <webAppConfig>
                        <!-- 项目访问路径 -->
                        <contextPath>/</contextPath>
                    </webAppConfig>
                </configuration>
            </plugin>

            <!-- tomcat7插件 maven 命令 tomcat7:run 启动项目-->
<!--            <plugin>-->
<!--                <groupId>org.apache.tomcat.maven</groupId>-->
<!--                <artifactId>tomcat7-maven-plugin</artifactId>-->
<!--                <version>2.2</version>-->
<!--                <configuration>-->
<!--                    <port>8080</port>-->
<!--                    <path>/</path>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>